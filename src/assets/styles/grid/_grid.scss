@use "variables";
@use "mixins";

.row,
.grid {
  display: grid;
  row-gap: variables.$gridRowGap;
  column-gap: variables.$gridColumnGap;
  grid-template-columns: repeat(variables.$gridColumns, #{variables.$gridColumns}fr);
}

/// $breakPoints {map<$key: string, $value: string>}
/// $screenType {key in $breakPoints} default values xl, lg, md, sm, xs
/// $size {value in $breakPoint} default values 1200px, 992px, 768px, 576px, 0
@each $screenType, $size in variables.$breakPoints {
  @media screen and (min-width: $size) {
    /// creates classes of type col-**-##
    /// where ** can be xl, lg, md, sm, xs
    /// ## can be 2 to 12
    @for $column from variables.$gridColumns through 2 {
      #{variables.$columnPrefix}-#{$screenType}-#{$column} {
        grid-column: span $column !important;
      }
    }
    /// creates classes of type d-**-none
    /// where ** can be xl, lg, md, sm, xs
    /// hides the element when the screen width is equal to `$size`
    .d-#{$screenType}-none {
      display: none;
    }
  }
}

/// creates classes of type col-##
/// where ## can be 2 to 12
@for $column from variables.$gridColumns through 2 {
  #{variables.$columnPrefix}-#{$column} {
    grid-column: span $column;
  }
}


@each $alignment, $value in variables.$horizontal-alignment {
  /// horizontally align grid items
  [class*="#{variables.$columnPrefix}"] {
    &#{variables.$alignPrefix}-#{$alignment} {
      justify-self: $value;
    }
  }

  /// horizontally align grid
  .grid#{variables.$alignPrefix}-#{$alignment} {
    justify-content: $value;
  }
}


@each $alignment, $value in variables.$vertical-alignment {
  /// vertically align grid items
  [class*="#{variables.$columnPrefix}"] {
    &#{variables.$alignPrefix}-#{$alignment} {
      align-self: $value;
    }
  }

  /// vertically align grid
  .grid#{variables.$alignPrefix} {
    &-#{$alignment} {
      align-items: $value;
    }
  }

}

/// center align both horizontally and vertically
[class*="#{variables.$columnPrefix}"].center {
  place-self: center;
}

.grid,
.row {
  &.center {
    place-items: center;
  }
}
